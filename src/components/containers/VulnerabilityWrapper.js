import React from 'react';
import PropTypes from 'prop-types';
import { Redirect } from 'react-router-dom';
import Vulnerability from '../../pages/Vulnerability';

import vulnsJSON from '../../json/vulnerabilities.json';

const VulnerabilityWrapper = ({ match }) => {
  // Pass the audit's info
  let vuln = {};
  const id = parseInt(match.params.id, 10);
  for (let i = 0; i < vulnsJSON.length; i += 1) {
    if (vulnsJSON[i].id === id) {
      vuln = vulnsJSON[i];
    }
  }
  // If Audit doesn't exist, redirect to 404 error page
  if (Object.keys(vuln).length === 0) {
    // return (<Audits match={match} {...audit} />);
    return (<Redirect to={{ pathname: '/404', state: { from: match.url } }} />);
  }
  return (<Vulnerability match={match} vuln={vuln} />);
};

VulnerabilityWrapper.propTypes = {
  match: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types
};

export default VulnerabilityWrapper;
